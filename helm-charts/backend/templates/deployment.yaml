{{- $tplfullname := (include "fullname" . ) -}}
{{- $volumeName := .Values.persistence.volumeName -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "name" . }}
  labels:
    app: {{ template "name" . }}
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "name" . }}
      release: {{ .Release.Name }}
  {{- if .Values.strategy.enabled }}
  strategy:
    type: {{ .Values.strategy.type }}
    {{- if eq "RollingUpdate" .Values.strategy.type }}
    rollingUpdate:
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge }}
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable }}
    {{- end }}
  {{- end }}
  template:
    metadata:
      labels:
        app: {{ template "name" . }}
        release: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.internalPort }}
          env:
            - name: TZ
              value: {{ .Values.timezone }}
            {{- if .Values.javaOpts }}
            - name: JAVA_OPTS
              value: {{ .Values.javaOpts }}
            {{- end }}
            - name: SPRING_REDIS_HOST
              value: redis
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:postgresql://postgres:5432/eshop_db"
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- if eq "httpGet" .Values.readinessProbe.type }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
            {{- else if eq "exec" .Values.readinessProbe.type }}
            exec:
              command:
              {{- range .Values.readinessProbe.exec.command }}
              - {{ . }}
              {{- end }}
            {{- else if eq "tcpSocket" .Values.readinessProbe.type }}
            tcpSocket:
              port: {{ .Values.readinessProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- if eq "httpGet" .Values.livenessProbe.type }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
            {{- else if eq "exec" .Values.livenessProbe.type }}
            exec:
              command:
              {{- range .Values.livenessProbe.exec.command }}
              - {{ . }}
              {{- end }}
            {{- else if eq "tcpSocket" .Values.livenessProbe.type }}
            tcpSocket:
              port: {{ .Values.livenessProbe.tcpSocket.port }}
            {{- end }}
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
          {{- end }}
          {{- if .Values.lifecycle.prestop.enabled }}
          lifecycle:
            preStop:
              exec:
                command: [{{ .Values.lifecycle.prestop.command }}]
          {{- end }}
          resources:
{{ toYaml .Values.resources | indent 12 }}
          {{- if .Values.persistence.enabled }}
          volumeMounts:
          {{- range .Values.persistence.pvcList }}
          - mountPath: {{ .hostPath }}
            name: {{ .name }}
          {{- end }}
          {{- end }}
      {{- if .Values.persistence.enabled }}
      volumes:
      {{- range .Values.persistence.pvcList }}
      - name: {{ .name }}
        persistentVolumeClaim:
          {{- if not (empty .existingClaim) }}
          claimName: {{ .existingClaim }}
          {{- else }}
          claimName: {{ $.Release.Name }}-{{ .name }}
          {{- end }}
      {{- end }}
      {{- end }}
      {{- if.Values.imagePullSecrets.enabled }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}
      {{- end }}
      {{- if .Values.nodeSelector.enabled }}
      nodeSelector:
        kubernetes.io/nodetype: {{ .Values.nodeSelector.nodetype }}
      {{- end }}
